{"pageProps":{"postData":{"id":"p224","contentHtml":"<p>Often we need to get a profile id for specified profiles and reuse it from different context. And usually it looks like this</p>\n<p>[code language=”sql”]</p>\n<p>profile id = [SELECT Id FROM Profile WHERE Name = ‘System Administrator’];</p>\n<p>[/code]</p>\n<p>And you can find such code in a few different places of your codebase, it will be compounded if your team has more than 1 developer. Therefore such code should be moved to utility classes.\nBelow you can find solution for getting a profile id by the name.</p>\n<p>[code language=”java”]\nprivate static Map&#x3C;String, Id> profileIdByName = new Map&#x3C;String, Id>();\npublic static Id getProfileIdByName(String profileName) {\nif (String.isBlank(profileName)) {\nthrow new CommonException(System.Label.MethodHasGotIncorrectArgument);\n}\nif (profileIdByName.containsKey(profileName)) {\nreturn profileIdByName.get(profileName);\n} else {\ntry {\nId profileId = [SELECT Id FROM Profile WHERE name =: profileName].Id;\nprofileIdByName.put(profileName, profileId);\nreturn profileId;\n} catch(QueryException qEx) {\nSystem.debug(‘ERROR:’ + qEx.getMessage() + ‘, in line’ + qEx.getLineNumber());\nthrow new CommonException(System.Label.ProfileNotFound);\n}\n}\nreturn null; // never fire\n}\n[/code]</p>\n<p>Unit tests:</p>\n<p>[code language=”java”]\n@isTest static void getProfileIdByNameWhenArgumentIsEmpty() {\ntry {\nUtils.getProfileIdByName(”);\n} catch(CommonException ex) {\nSystem.assertEquals(System.Label.MethodHasGotIncorrectArgument, ex.getMessage());\n}\n}</p>\n<p>@isTest static void getProfileIdByNameWhenProfileDoesNotExist() {\ntry {\nUtils.getProfileIdByName(‘123321123’);\n} catch(CommonException ex) {\nSystem.assertEquals(System.Label.ProfileNotFound, ex.getMessage());\n}\n}</p>\n<p>@isTest static void getProfileIdByNameWhenQueredExistingKey() {\nId profileId = Utils.getProfileIdByName(GlobalConstants.PROFILE_SYSTEM_ADMINISTRATOR);\nSystem.assertEquals(1, Limits.getQueries());\nSystem.assertEquals([SELECT Id FROM Profile WHERE Name =:GlobalConstants.PROFILE_SYSTEM_ADMINISTRATOR].Id,\nprofileId);\nUtils.getProfileIdByName(GlobalConstants.PROFILE_SYSTEM_ADMINISTRATOR);\nUtils.getProfileIdByName(GlobalConstants.PROFILE_SYSTEM_ADMINISTRATOR);\nSystem.assertEquals(2, Limits.getQueries());\n}</p>\n<p>@isTest static void getProfileIdByNameWhenQueredForFewKeys() {\nId profileId = Utils.getProfileIdByName(GlobalConstants.PROFILE_SYSTEM_ADMINISTRATOR);\nSystem.assertEquals(1, Limits.getQueries());\nSystem.assertEquals([SELECT Id FROM Profile WHERE Name =:GlobalConstants.PROFILE_SYSTEM_ADMINISTRATOR].Id,\nprofileId);\nSystem.assertEquals(2, Limits.getQueries());\nprofileId = Utils.getProfileIdByName(GlobalConstants.PROFILE_BRANCH_STANDARD_PLATFORM_USER);\nSystem.assertEquals(3, Limits.getQueries());\nSystem.assertEquals([SELECT Id FROM Profile WHERE Name =:GlobalConstants.PROFILE_BRANCH_STANDARD_PLATFORM_USER].Id,\nprofileId);\nSystem.assertEquals(4, Limits.getQueries());\nUtils.getProfileIdByName(GlobalConstants.PROFILE_BRANCH_STANDARD_PLATFORM_USER);\nUtils.getProfileIdByName(GlobalConstants.PROFILE_SYSTEM_ADMINISTRATOR);\nSystem.assertEquals(4, Limits.getQueries());\n}\n[/code]</p>\n","title":"Salesforce: getting a profile id by the name","date":"2013-08-29T13:22:12+01:00","status":"publish","permalink":"/?p=224","author":"pavel","excerpt":"","type":"post","category":["force.com"],"tag":["apex","force.com"],"post_format":[],"fplayout":["fullwidth"],"original_post_id":["224"],"dsq_thread_id":["5588897425"]}},"__N_SSG":true}