{"pageProps":{"postData":{"id":"improve-dbt-cli","contentHtml":"<p>I use <strong>dbt</strong> pretty extensivly on day to day work and switching profiles is a bit tedious. My project uses data vault pattern on top of differnt databases for development, testing and production, so there's a lot of databases, schemas, roles to use.</p>\n<p>When I need to implement some feature, I usually start work on <code>DEV</code> environment, where I perform data modeling, initial development and testing. During this work my dbt project should be always be pointing to <code>DEV</code>, as nobody wants to deploy any not complete and not tested changes to the production. When an active development is completed we need to conduct UAT with business stakeholders, during this period I usually need my <strong>dbt</strong> connected to <code>TEST</code> environment. Once everything is compelete, I need to deploy tested feature to the production. It's rarely the case when I can afford to work on a single feature at a time, most probably I'm switching between different features/bugs regularly, so I need prod, then dev, again prod and then test, prod again and dev... Moreover I got few other data sources in dbt.</p>\n<p>How does all the configs connected in dbt? Your project's root contains <code>dbt_project.yml</code> file which states a profile name to use via variable <code>profile</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># dbt_project.yml</span>\n<span class=\"token key atrule\">profile</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'DBT_SNOWFLAKE'</span>\n</code></pre></div>\n<p>when <code>~/.dbt/profiles.yml</code> contains actual connection properties</p>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">DBT_SNOWFLAKE</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">outputs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dev</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span> xxx00011\n      <span class=\"token key atrule\">client_session_keep_alive</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n      <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> DEV_DB\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> strong_password\n      <span class=\"token key atrule\">retry_on_database_errors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> APPACCESS_SNOWFLAKE_DEVELOPER\n      <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span> PRD_SCHEMA\n      <span class=\"token key atrule\">threads</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> snowflake\n      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> DEV_ETL_USER\n      <span class=\"token key atrule\">warehouse</span><span class=\"token punctuation\">:</span> NON_PRD_WAREHOUSE\n    <span class=\"token key atrule\">tst</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span> xxx00011\n      <span class=\"token key atrule\">client_session_keep_alive</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n      <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> TST_DB\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> strong_password\n      <span class=\"token key atrule\">retry_on_database_errors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> TST_ETL\n      <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span> PRD_SCHEMA\n      <span class=\"token key atrule\">threads</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> snowflake\n      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> TST_ETL_USER\n      <span class=\"token key atrule\">warehouse</span><span class=\"token punctuation\">:</span> NON_PRD_WAREHOUSE\n    <span class=\"token key atrule\">prod</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span> xxx00011\n      <span class=\"token key atrule\">client_session_keep_alive</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n      <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> PRD_DB\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> strong_password\n      <span class=\"token key atrule\">retry_on_database_errors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> PRD_ETL\n      <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span> PRD_SCHEMA\n      <span class=\"token key atrule\">threads</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> snowflake\n      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> PRD_ETL_USER\n      <span class=\"token key atrule\">warehouse</span><span class=\"token punctuation\">:</span> PRD_WAREHOUSE\n  <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> prod\n</code></pre></div>\n<p>where <code>target</code> variable decides which connection should be used.</p>\n<p>Your workflow looks like this:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># run model on DEV for current dev changes</span>\ndbt run <span class=\"token parameter variable\">--models</span> tag:SEMANTIC\n<span class=\"token comment\"># open ~/.dbt/profiles.yml file, change target from dev to prod</span>\n<span class=\"token comment\"># and run production change, run some dbt stuff</span>\ndbt run-operation BuildAllObjects\ndbt <span class=\"token builtin class-name\">test</span> <span class=\"token parameter variable\">--select</span> tag:data_freshness_tests\n<span class=\"token comment\"># edit ~/.dbt/profiles.yml once again to change target bach from prod to tst</span>\ndbt run <span class=\"token parameter variable\">--models</span> tag:SP\n<span class=\"token comment\"># edit ~/.dbt/profiles.yml once again to change target bach from tst to dev</span>\n<span class=\"token comment\"># continue to work on you dev changes</span>\ndbt run <span class=\"token parameter variable\">--models</span> tag:SEMANTIC\n</code></pre></div>\n<p>Other option is to have different profiles and change <code>dbt_project.yml</code> file. Anyway it requires constant file edits. I really don't like such a hustle. So I read dbt help what wasn't very helpful though. Except one thing, I found <code>--profiles-dir</code> option</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">dbt <span class=\"token parameter variable\">--help</span>\n\nusage: dbt <span class=\"token punctuation\">[</span>-h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>--version<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-r RECORD_TIMING_INFO<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-d<span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">..</span>.\n\n--profiles-dir PROFILES_DIR\n                      Which directory to <span class=\"token function\">look</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">for</span> the profiles.yml file.\n                      If not set, dbt will <span class=\"token function\">look</span> <span class=\"token keyword\">in</span> the current working\n                      directory first, <span class=\"token keyword\">then</span> <span class=\"token environment constant\">HOME</span>/.dbt/\n\n</code></pre></div>\n<p>So, it allows us to tell dbt which profile directory to use. What give me an idea to create a dedicated profile directory for each connection and use aliases</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">└─$ tree ~/.dbt\n<span class=\"token comment\"># in fact I have much more folders and aliases</span>\n/Users/admin/.dbt\n├── dev\n│   └── profiles.yml\n├── prod\n│   └── profiles.yml\n├── prod_sysadmin\n│   └── profiles.yml\n├── profiles.yml\n├── tst\n│   └── profiles.yml\n└── tst_sysadmin\n    └── profiles.yml\n\n<span class=\"token number\">6</span> directories, <span class=\"token number\">8</span> files\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ~/Users/admin/.aliases</span>\n<span class=\"token assign-left variable\">dbt_dev</span><span class=\"token operator\">=</span><span class=\"token string\">'dbt --profiles-dir=/Users/admin/.dbt/dev -x'</span>\n<span class=\"token assign-left variable\">dbt_tst</span><span class=\"token operator\">=</span><span class=\"token string\">'dbt --profiles-dir=/Users/admin/.dbt/tst -x'</span>\n<span class=\"token assign-left variable\">dbt_prod</span><span class=\"token operator\">=</span><span class=\"token string\">'dbt --profiles-dir=/Users/admin/.dbt/prod -x'</span>\n<span class=\"token assign-left variable\">dbt_prod_sysadmin</span><span class=\"token operator\">=</span><span class=\"token string\">'dbt --profiles-dir=/Users/admin/.dbt/prod_sysadmin -x'</span>\n<span class=\"token assign-left variable\">dbt_tst_sysadmin</span><span class=\"token operator\">=</span><span class=\"token string\">'dbt --profiles-dir=/Users/admin/.dbt/tst_sysadmin -x'</span>\n</code></pre></div>\n<p>So now you can use aliases</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># I don't need to edit any single file now, just use command</span>\n<span class=\"token comment\"># moreover it prevents from running incorrect connection when you edited file but forgot to save it</span>\ndbt_dev run <span class=\"token parameter variable\">--models</span> tag:SEMANTIC\ndbt_prod run-operation BuildAllObjects\ndbt_prod <span class=\"token builtin class-name\">test</span> <span class=\"token parameter variable\">--select</span> tag:data_freshness_tests\ndbt_tst run <span class=\"token parameter variable\">--models</span> tag:SP\ndbt_dev run <span class=\"token parameter variable\">--models</span> tag:SEMANTIC\n</code></pre></div>\n<p>This approach makes life a little easy. I still have dbt connected to DEV as it's most used and most safe environment to work with, though most of the time I use aliases as it's more explicit.</p>\n","title":"Improve DBT CLI experience","date":"2023-05-05T13:25:00+00:00","status":"publish","author":"pavel","type":"post","tag":["dbt","cli"]}},"__N_SSG":true}