{"pageProps":{"postData":{"id":"p173","contentHtml":"<p><strong>Ant migration tool</strong> for Force.com is incredible tool which widens your development and deployment abilities.</p>\n<p>First of all there are the list of the benefits, which you can get with it</p>\n<ul>\n<li>deployment via command line in fully automated mode</li>\n<li>running unit tests during deployment to sandbox</li>\n<li>using Continuous Integration server like Jenkins</li>\n</ul>\n<p>Let’s see deeply. At start you need to install <a href=\"http://ant.apache.org/\">Apache Ant.</a> After that you need to download migration tool from you Salesforce org by the following way: <strong>Setup → Develop → Tool</strong> there is you can find a link to download. After this you just need to extract jar file into <strong>lib</strong> directory of ANT_HOME. Ok, now you have an installed ant with Salesforce migration tool.</p>\n<p>The next step is an adding build file and connection information to your project. You can find the basic ant configuration <a href=\"https://github.com/pavel-slepenkov/salesforce-ant-migration-tool-demo/tree/master/demo.beginner\">here</a> it’s a github repo where I collect Salesforce Ant Migration Tool configurations.</p>\n<p>Here you can see the following structure</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/blog.pavelslepenkov.info/Ant+Migration+Tool/2013-08-10+23_07_47-salesforce-ant-migration-tool-demo_demo.beginner+at+master+%C2%B7+pavel-slepenkov_sal.png\" alt=\"\"></p>\n<p>It’s basic structure for salesforce projects, where <strong>src</strong> directory was created by Eclipse and holds all metadata components into their own folders, and two files <strong>build.xml</strong> and <strong>build.properties</strong> which are generic for Ant.</p>\n<p><strong>build.properties</strong> is a file for a storing all configured properties, like username and password, urls, sandbox names, etc.</p>\n<p>[code lang=”plain”]</p>\n<p># build.properties\n#</p>\n<p># Specify the login credentials for the desired Salesforce organization</p>\n<p>sf.username = &#x3C;Insert your Salesforce username here>\nsf.password = &#x3C;Insert your Salesforce password + Security Token here></p>\n<p>#sf.pkgName = &#x3C;Insert comma separated package names to be retrieved>\n#sf.zipFile = &#x3C;Insert path of the zipfile to be retrieved>\n#sf.metadataType = &#x3C;Insert metadata type name for which listMetadata or bulkRetrieve operations are to be performed></p>\n<p># Use ‘https://login.salesforce.com’ for production or developer edition (the default if not specified).\n# Use ‘https://test.salesforce.com for sandbox.\nsf.serverurl = https://login.salesforce.com</p>\n<p>sf.maxPoll = 20</p>\n<p>[/code]</p>\n<p><strong>build.xml</strong> is an Ant script which describes all possible build operations for your project. Below you can find the very basic ant script for Force.com.</p>\n<p>[code lang=”xml”]</p>\n<p>&#x3C;project name=\"Demo usage of Salesforce Ant Migration Tool\" default=\"testDeploy\" basedir=\".\" xmlns:sf=\"antlib:com.salesforce\"></p>\n<p>&#x3C;!– default properties –>\n&#x3C;property file=\"build.properties\"/>\n&#x3C;property environment=\"env\"/>\n&#x3C;property name=\"target\" value=\"src\" /></p>\n<p>&#x3C;target name=\"testDeploy\">\n&#x3C;!– Verify the abbility to upload the contents of the \"src\" package –>\n&#x3C;sf:deploy username=\"${sf.username}\" password=\"${sf.password}\" serverurl=\"${sf.serverurl}\" maxPoll=\"${sf.maxPoll}\" deployRoot=\"src\" checkOnly=\"true\" runAllTests=\"true\"/>\n&#x3C;/target></p>\n<p>&#x3C;target name=\"deploy\">\n&#x3C;!– Upload the contents of the \"src\" directory and run all test –>\n&#x3C;sf:deploy username=\"${sf.username}\" password=\"${sf.password}\" serverurl=\"${sf.serverurl}\" maxPoll=\"${sf.maxPoll}\" deployRoot=\"scr\" runAllTests=\"true\">\n&#x3C;/sf:deploy>\n&#x3C;/target></p>\n<p>&#x3C;!– retriev metadata from org into local project folder src (by default), but it might be overridden in command line –>\n&#x3C;target name=\"retrieve\" description=\"Retrieves metadata from ${sf.env} to ${target}\" >\n&#x3C;mkdir dir=\"${target}\"/>\n&#x3C;sf:retrieve username=\"${sf.username}${sf.env}\" password=\"${sf.password}\" serverurl=\"${sf.serverurl}\" retrieveTarget=\"${target}\" unpackaged=\"package.xml\"/>\n&#x3C;/target></p>\n<p>&#x3C;!– Retrieve the information of all items of a particular metadata type –>\n&#x3C;target name=\"listMetadata\">\n&#x3C;sf:listMetadata username=\"${sf.username}\" password=\"${sf.password}\" serverurl=\"${sf.serverurl}\" metadataType=\"${sf.metadataType}\"/>\n&#x3C;/target></p>\n<p>&#x3C;!– Retrieve the information on all supported metadata type –>\n&#x3C;target name=\"describeMetadata\">\n&#x3C;sf:describeMetadata username=\"${sf.username}\" password=\"${sf.password}\" serverurl=\"${sf.serverurl}\"/>\n&#x3C;/target></p>\n<p>&#x3C;/project></p>\n<p>[/code]</p>\n<p>Here are 5 targets:</p>\n<ul>\n<li>testDeploy</li>\n<li>deploy</li>\n<li>retrieve</li>\n<li>listMetadata</li>\n<li>describeMetadata</li>\n</ul>\n<p>For a start you need the first 2.</p>\n<p><strong>testDeploy</strong> allows you to test deployment without committing any changes into cloud environment. With this operation you can verify stability of all metadata components which are described into <strong>package.xml</strong>. For basic project it will take less than 1 min, what is faster than such operation via Eclipse in a few times.</p>\n<p>[code lang=”plain”]\nYour_project_location>ant testDeploy\n[/code]</p>\n<p>As well as you have finished with <strong>testDeploy</strong> and had not got any error messages, you can go ahead with <strong>deploy</strong> task which allows you to deploy all metadata components into you org with running all unit tests.</p>\n<p>[code lang=”plain”]\nYour_project_location>ant deploy\n[/code]</p>\n<p>These are the main tasks which would be used everyday, the 3 next tasks are more rarely used, the first one is <strong>retrieve</strong> which allows you to download the latest version of metadata from salesforce, by default it goes to <strong>src</strong> directorey, but if you need to redirect it to another folder you can use command line parameters</p>\n<p>[code lang=”plain”]\nYour_project_location>ant -Dtarget=retrieveResults retrieve\n[/code]</p>\n<p>This command will download metadata into folder <strong>retrieveResults</strong> which should be existing at same level with <strong>src</strong> dirrectory.</p>\n<p>Might be that 2 other target do not be needed at all. These one are for a listing and checking metadata into your org.</p>\n<p>This is it for now.</p>\n","title":"Start with Salesforce ant migration tool","date":"2013-08-10T21:41:11+01:00","status":"publish","permalink":"/?p=173","author":"pavel","excerpt":"","type":"post","category":["force.com","migration tool"],"tag":["ant","force.com","migration tool","tools"],"post_format":[],"cleanretina_sidebarlayout":["default"],"fplayout":["fullwidth"],"original_post_id":["173"],"dsq_thread_id":["5614227609"]}},"__N_SSG":true}