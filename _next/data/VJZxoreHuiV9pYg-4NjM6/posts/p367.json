{"pageProps":{"postData":{"id":"p367","contentHtml":"<p><strong>Mavensmate</strong> is a great development tool which makes salesforce developer lives much easier, but from time to time working with Force.com plugin for Eclipse (Force.com IDE) can be more convenient. I see the following pros and cons for Mavensmate and Force.com IDE</p>\n<p><strong>Mavensmate Pros:</strong></p>\n<ol>\n<li>Speed. Yeah, mavensmate is very fast.</li>\n<li>A great set of plugins which is available for Sublime Text</li>\n<li>Many great things like code folding, bookmarks, etc. which provided out of box for Sublime Text, but are unavailable in Force.com IDE.</li>\n<li>Mavensmate stores your apex-scripts which were run anonymously</li>\n</ol>\n<p><strong>Mavensmate Cons:</strong></p>\n<ol>\n<li>Sometimes this tool has a trouble during saving to server when it shows a diff dialog although conflict doesn’t exist</li>\n<li>Working with some type of resources is more comfortable in Force.com IDE</li>\n</ol>\n<p><strong>Force.com IDE Pros:</strong></p>\n<ol>\n<li>Eclipse is a \"true IDE\" when Sublime Text is more a text editor with a few IDE features</li>\n<li>Has handy synchronization/comparison tool</li>\n<li>Has good integration with Apache Ant and Jenkins CI</li>\n</ol>\n<p><strong>Force.com IDE Cons:</strong></p>\n<ol>\n<li>Usually a new release comes 3 times per year with Salesforce.com releases. Thus a new features come only 3 times per year. (for now Force.com IDE became open source and might be it’ll speed up a feature development and releases)</li>\n<li>Might be pretty slow and usually it’s slow, very very slow</li>\n<li>Has no hot-key for saving to server. OMG</li>\n</ol>\n<p>Thus it might be very handful if we can use single workspace for both IDE. Here is the step by step instruction which shows you how to configure such workspace.</p>\n<p><strong>1.</strong>  Setup Eclipse project. That’s simple task I guess. Let’s say you have the following project structure. It’s very typical structure and I guess that you will have pretty similar project.</p>\n<p><img src=\"/images/p367/14721555364_4963e6a170_o.png\" alt=\"Force.com IDE project structure\"></p>\n<p><strong>2.</strong> Download a <a href=\"https://gist.github.com/pavel-slepenkov/d4d7501a4ea277883210\">configs</a> which were copied from another mavensmate project. Copy these files in the locations which showed on screenshot below. As you can see you have to copy 4 files to config directory (which you have to create) and 3 files to the project root directory (these files should have the same name as a project).</p>\n<p><img src=\"/images/p367/14723969742_0002ee05ea_o.png\" alt=\"Configs\"></p>\n<p><strong>3.</strong> After that open <strong>config/.settings</strong> and enter a needed parameters</p>\n<p><img src=\"/images/p367/2014-07-23-13_40_34-greenshot-image-editor.png\" alt=\"Mavensmate settings\"></p>\n<p>workspace and project_name should be the same as Eclipse workspace and project name.</p>\n<p>When you completed these changes you can open Sublime Text and go to Mavensmate menu and open the project.</p>\n<p><img src=\"/images/p367/2014-07-23-14_52_43-untitled-logger-sublime-text-unregistered.png\" alt=\"Mavensmate open project\"></p>\n<p><strong>4.</strong> Now open MavensMate menu again and select <strong>Project → Edit Project</strong>. Update credentials and click “Done”.</p>\n<p><img src=\"/images/p367/2014-07-23-15_03_29-mavensmate.png\" alt=\"MavensMate project created\"><strong>5.</strong> Reset the metadata container</p>\n<p><img src=\"/images/p367/mavensmate-reset-metadata-container.png\" alt=\"Mavensmate - reset metadata container\"></p>\n<p>Now your project is ready to work. Good coding!</p>\n","title":"Setting up Mavensmate to works together with Eclipse project","date":"2014-07-23T13:28:37+01:00","status":"publish","permalink":"/?p=367","author":"pavel","type":"post","category":["force.com"],"tag":["Force.com IDE","MavensMate","salesforce"]}},"__N_SSG":true}