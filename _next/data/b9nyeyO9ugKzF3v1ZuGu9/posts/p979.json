{"pageProps":{"postData":{"id":"p979","contentHtml":"<blockquote>\n<p><em>Disclaimer: Nothing unique is described here. Post is made with intent to have a checklist of my setup. It’d be great if it might be interested or helpful to someone else</em></p>\n</blockquote>\n<p>One of my project requires a daily web scraping and storing data on database. Project includes the following components:</p>\n<ul>\n<li>Python 3.7</li>\n<li>Postgres</li>\n<li>Cron</li>\n</ul>\n<p>Past years this project was running on AWS EC2 t2.micro instance and this was enough. I was going to switch from AWS to GCP in order to test and evaluate new service.</p>\n<p><img src=\"/images/p979/image-2-1024x478.png\" alt=\"Max. of CPU utilization on AWS EC2 micro\">\n<em>Max. of CPU utilization on AWS EC2 micro</em></p>\n<p><ps2><strong>1. Setup <a href=\"http://cloud.google.com\">Google Cloud Platform </a>account</strong></ps2></p>\n<p>It’s super easy to fill in several forms and get your account.</p>\n<p><ps2><strong>2. Setup Debian machine.</strong></ps2></p>\n<p>I choose <strong>g1-small</strong> machine with 1 vCPU and 1.7 GB memory which should be enough for my experiments. During machine configuration process you can add your ssh key.</p>\n<p><ps2><strong>3. Connect via SSH.</strong></ps2></p>\n<p>After setup you can login with SSH directly from browser or by your preferable client with ssh key provided in the previous step</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> -i <span class=\"token string\">\"~/.ssh/id_rsa\"</span> pavel@2.248.5.16\n</code></pre></div>\n<p>where pavel is name which I give to my ssh key and 2.248.5.16 is public IP address of my instance.</p>\n<p>After login to the newly created instance I have to setup all required tools</p>\n<p><ps2><strong>4. Python installation</strong></ps2></p>\n<p>Debian machine comes with Python 3.5 installed. My projects use python 3.7, so I need to install this Python version.</p>\n<p>Install build-essential</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> build-essential\n</code></pre></div>\n<p>Build Python from sources</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tgz\n<span class=\"token function\">tar</span> xvf Python-3.7.1.tgz\n<span class=\"token builtin class-name\">cd</span> Python-3.7.1\n./configure --enable-optimizations\n<span class=\"token function\">make</span> -j8\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> altinstall\npython3.7\n</code></pre></div>\n<p><em>It took about 40 minutes on this machine</em></p>\n<p><img src=\"/images/p979/image.png\" alt=\"\"><figcaption>CPU utilization during python compilation</figcaption></p>\n<p><ps2><strong>5. Postgres installation</strong></ps2></p>\n<p>Official postgres site provides <a href=\"https://www.postgresql.org/download/linux/debian/\">great instruction</a> on how to install postgres version which you need.\ncreate file</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/apt/sources.list.d/pgdg.list\n</code></pre></div>\n<p>with the following content</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\n</code></pre></div>\n<p>Then run</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> -\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> postgresql-11\n</code></pre></div>\n<p>After success Postgres installation we need to perform initial configuration. Setup postgres user password by the following command.</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> -u postgres psql -c <span class=\"token string\">\"ALTER USER postgres PASSWORD 'your_password';\"</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/postgresql/11/main/pg_hba.conf\n</code></pre></div>\n<p>change config file with the following values</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Database administrative login by Unix domain socket</span>\n<span class=\"token builtin class-name\">local</span>   all             postgres                                md5\n\n<span class=\"token comment\"># \"local\" is for Unix domain socket connections only</span>\n<span class=\"token builtin class-name\">local</span>   all             all                                     md5\n</code></pre></div>\n<p>Restart Postgres</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> /etc/init.d/postgresql restart\n</code></pre></div>\n<p>Create new user for using in your development environment</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">createuser -U postgres -d -e -E -l -P -r -s <span class=\"token operator\">&#x3C;</span>my_name<span class=\"token operator\">></span>\n</code></pre></div>\n<p><ps2><strong>6. Configure crontab</strong></ps2></p>\n<p>run <code>crontab -e</code> and add the following lines to its config</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\"><span class=\"token environment constant\">SHELL</span></span><span class=\"token operator\">=</span>/bin/bash\n<span class=\"token assign-left variable\">PYTHONIOENCODING</span><span class=\"token operator\">=</span>utf8\n<span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">15</span> * * python /home/pavel/projects/p1/src/scraper1.py all\n<span class=\"token number\">0</span> * * * * python /home/pavel/projects/p1/src/scraper1.py latest\n<span class=\"token number\">0</span> * * * * python /home/pavel/projects/p1/src/s1/scraper2.py\n</code></pre></div>\n<p><ps2><strong>7. Create a swap file</strong></ps2></p>\n<p>Google Cloud Compute vm had no swap file. So we need to create one</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/var/swap <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">2048</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">524288</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token number\">600</span> /var/swap\n<span class=\"token function\">sudo</span> <span class=\"token function\">mkswap</span> /var/swap\n<span class=\"token function\">sudo</span> <span class=\"token function\">swapon</span> /var/swap\n</code></pre></div>\n<p>And then the following line to /etc/fstab to make it permanent.</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">/var/swap none swap sw <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n</code></pre></div>\n<p>That’s a complete setup of my web scraping environment. Here’s monitoring of web scraping activity</p>\n<p><img src=\"/images/p979/image-1.png\" alt=\"\"></figure></p>\n","title":"Setting up web scraping python environment on Google Compute Engine","date":"2018-12-10T00:59:58+00:00","status":"publish","permalink":"/?p=979","author":"pavel","excerpt":"","type":"post","category":["Uncategorized"],"tag":["google cloud platform","postgres","python"],"post_format":[]}},"__N_SSG":true}